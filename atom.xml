<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ch3v4l&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-09-04T07:26:43.781Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>ch3v4l</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>羊城杯2022 部分题解</title>
    <link href="http://example.com/2022/09/04/%E7%BE%8A%E5%9F%8E%E6%9D%AF2022-%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>http://example.com/2022/09/04/%E7%BE%8A%E5%9F%8E%E6%9D%AF2022-%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</id>
    <published>2022-09-04T07:05:56.000Z</published>
    <updated>2022-09-04T07:26:43.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="羊城杯2022-部分题解"><a href="#羊城杯2022-部分题解" class="headerlink" title="羊城杯2022 部分题解"></a>羊城杯2022 部分题解</h1><p>2678.54分39名。<br>排名不算高，但是比赛过程还是挺有意思的，虽然时好时坏的平台和脑洞题很屑。<br>Crypto有大佬去carry了，这次只搞了Misc，Web辅助坐牢。</p><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>ROT13+base32</p><h2 id="迷失幻境"><a href="#迷失幻境" class="headerlink" title="迷失幻境"></a>迷失幻境</h2><p>vmdk改7z解压，系统盘回收站里发现RE4UUGI.jpg、IE4UUGI.jpg，但是后一个文件只是后缀名带jpg，不是图片。<br>迷失幻境文件夹下面给了1.png到100.png，但是45.png丢了，其他图片算一下md5发现相同，说明只是文件名不同，关键在找到45.png。<br>回到回收站发现有一个1.1MB的RJ3JGVF大小看着挺像图片的，hex查一下发现是png格式只不过丢了89504e47头，补全打开发现和迷失幻境文件夹里的图片一样，推测这个就是45.png。<br><img src="https://img-blog.csdnimg.cn/aaea92c72f6c427b87719ff0719e48df.png#pic_center" alt="在这里插入图片描述"><br>这个图片和其他图片大小略有不同，stegsolve异或一下拿到key。<br><img src="https://img-blog.csdnimg.cn/61f76fe2db014e6ea8ca414692e83485.png#pic_center" alt="在这里插入图片描述"><br>然后去解那个哒哒哒.jpg了，但是试了几个都爆不出来。<br>后来发现RE4UUGI.jpg属性里一个提示“猜不出来”，outguess一下拿到flag。</p><h2 id="where-is-secret"><a href="#where-is-secret" class="headerlink" title="where_is_secret"></a>where_is_secret</h2><p>屑题，最开始不给源码，<del>猜个头</del><br>vig.txt提示维吉尼亚加密，用在线爆破网站爆一下得到密钥gwht和压缩包密码GWHT@R1nd0yyds。<br>解压拿到out.bmp，结合提示给出的加密脚本写解密代码即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">img = Image.<span class="built_in">open</span>(<span class="string">&#x27;out.bmp&#x27;</span>)</span><br><span class="line"></span><br><span class="line">d = <span class="built_in">dict</span>()</span><br><span class="line">k = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">371</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">371</span>):</span><br><span class="line">            p = img.getpixel((j,i))</span><br><span class="line">            f.write(<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="built_in">bin</span>(p[<span class="number">1</span>])[<span class="number">2</span>:].zfill(<span class="number">8</span>)+<span class="built_in">bin</span>(p[<span class="number">2</span>])[<span class="number">2</span>:].zfill(<span class="number">8</span>),<span class="number">2</span>)))</span><br></pre></td></tr></table></figure><p> 得到out.txt，内容穿插着flag，写正则表达式提取特殊字符后观察手动拼接即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;out.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>).read()</span><br><span class="line"></span><br><span class="line">a = re.findall(<span class="string">&#x27;[^a-z\&#123;\&#125;0-9][a-z\&#123;\&#125;0-9][^a-z\&#123;\&#125;0-9]&#x27;</span>, f, re.M)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># flag&#123;h1d3_1n_th3_p1ctur3&#125;</span></span><br></pre></td></tr></table></figure><h2 id="躲猫猫"><a href="#躲猫猫" class="headerlink" title="躲猫猫"></a>躲猫猫</h2><p>这题拿了个四血，乐。<br>binwalk一下流量包发现里面藏了一个压缩包，其中hide&amp;seek.py和secret文件被加密，key.log可以分离但是提示损坏，估计是binwalk导致的。<br>在流量包中ftp协议报文下找到一个important.zip，推测为得到的压缩包，追踪ftp-data得到压缩包文件，提取出完整的key.log。<br><img src="https://img-blog.csdnimg.cn/cd9d60c76d0a4437ba7878b4cf12ddf5.png#pic_center" alt="在这里插入图片描述"><br>报文中有大量的TLS流量，在preferences中导入log文件中的密钥信息，查询发现部分TLS流被解密。在stream29中发现使用邮箱传输了数据，源数据中查询到FFD8字段，导出得到含有压缩包密码的图片。<br><img src="https://img-blog.csdnimg.cn/329ce3fdae73453c9cfbb556e90afceb.png#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a450a201c2af4020a66447fc1c2e94f8.jpeg#pic_center" alt="在这里插入图片描述"><br>解压得到python源码和secret，源码用于加密图片，逆向解密即可。（这题加密代码跟DS初赛基本一样）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> array, zeros, uint8</span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gp</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">image = Image.<span class="built_in">open</span>(<span class="string">&quot;cat.png&quot;</span>)</span><br><span class="line">w, h = image.size</span><br><span class="line">imagearray = array(image)</span><br><span class="line"></span><br><span class="line">x = <span class="number">5999540678407978169965856946811257903979429787575580150595711549672916183293763090704344230372835328</span></span><br><span class="line">y = <span class="number">6310149030391323406342737832910952782997118359318834776480172449836047279615976753524231989362688</span></span><br><span class="line">kn = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">x1 = <span class="built_in">round</span>(x/y*<span class="number">0.001</span>, <span class="number">16</span>)</span><br><span class="line">u1 = y*<span class="number">3650</span>/x</span><br><span class="line">x2 = <span class="built_in">round</span>(x/y*<span class="number">0.00101</span>, <span class="number">16</span>)</span><br><span class="line">u2 = y*<span class="number">3675</span>/x</span><br><span class="line">x3 = <span class="built_in">round</span>(x/y*<span class="number">0.00102</span>, <span class="number">16</span>)</span><br><span class="line">u3 = y*<span class="number">3680</span>/x</span><br><span class="line">kt = [x1, x2, x3]</span><br><span class="line"><span class="built_in">print</span>(kt)</span><br><span class="line"></span><br><span class="line">temp_image = zeros(shape=[h, w, <span class="number">3</span>], dtype=uint8)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(temp_image))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(temp_image[<span class="number">0</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(temp_image[<span class="number">0</span>][<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, kn):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, h):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, w):</span><br><span class="line">            x1 = u1 * x1 * (<span class="number">1</span> - x1)</span><br><span class="line">            x2 = u2 * x2 * (<span class="number">1</span> - x2)</span><br><span class="line">            x3 = u3 * x3 * (<span class="number">1</span> - x3)</span><br><span class="line">            r1 = <span class="built_in">int</span>(x1*<span class="number">255</span>)</span><br><span class="line">            r2 = <span class="built_in">int</span>(x2*<span class="number">255</span>)</span><br><span class="line">            r3 = <span class="built_in">int</span>(x3*<span class="number">255</span>)</span><br><span class="line">            <span class="keyword">for</span> t <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">                temp_image[i][j][t] = (imagearray[i][j][t]-((r1+r2) ^ r3)) % <span class="number">256</span></span><br><span class="line">    x1 = kt[<span class="number">0</span>]</span><br><span class="line">    x2 = kt[<span class="number">1</span>]</span><br><span class="line">    x3 = kt[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">encflagarray = Image.fromarray(temp_image)</span><br><span class="line">encflagarray.show()</span><br><span class="line">encflagarray.save(<span class="string">&quot;flag.png&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到图片，搜图发现是MaxiCode码。<a href="https://zh.wikipedia.org/wiki/File:MaxiCode.svg">Maxicode Wiki</a><br>中间起定位作用的圆圈被猫代替了，找个示例码截下来手动覆盖一下，扫描得到flag。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;羊城杯2022-部分题解&quot;&gt;&lt;a href=&quot;#羊城杯2022-部分题解&quot; class=&quot;headerlink&quot; title=&quot;羊城杯2022 部分题解&quot;&gt;&lt;/a&gt;羊城杯2022 部分题解&lt;/h1&gt;&lt;p&gt;2678.54分39名。&lt;br&gt;排名不算高，但是比赛过程还是</summary>
      
    
    
    
    <category term="CTF-Writeups" scheme="http://example.com/categories/CTF-Writeups/"/>
    
    
  </entry>
  
</feed>
